[{"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\GlobalStyles.js":"3","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\home-page\\index.jsx":"4","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\poll-page\\index.jsx":"5","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\log-in-page\\index.jsx":"6","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\user-page\\index.jsx":"7","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\constant.js":"8","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\user-reducer.js":"9","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\action.js":"10","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\store.js":"11","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\index.js":"12","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\poll-reducer.js":"13"},{"size":431,"mtime":1612314588518,"results":"14","hashOfConfig":"15"},{"size":1304,"mtime":1612992176014,"results":"16","hashOfConfig":"15"},{"size":1727,"mtime":1613437854789,"results":"17","hashOfConfig":"15"},{"size":9105,"mtime":1613789573399,"results":"18","hashOfConfig":"15"},{"size":3142,"mtime":1613093529224,"results":"19","hashOfConfig":"15"},{"size":6615,"mtime":1613524217858,"results":"20","hashOfConfig":"15"},{"size":1964,"mtime":1613090423273,"results":"21","hashOfConfig":"15"},{"size":474,"mtime":1613611229286,"results":"22","hashOfConfig":"15"},{"size":726,"mtime":1612321768557,"results":"23","hashOfConfig":"15"},{"size":593,"mtime":1612316204270,"results":"24","hashOfConfig":"15"},{"size":303,"mtime":1612230258239,"results":"25","hashOfConfig":"15"},{"size":175,"mtime":1612230243143,"results":"26","hashOfConfig":"15"},{"size":791,"mtime":1612313875949,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ja0ftj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\index.js",[],["59","60"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\App.js",["61","62","63","64","65"],"import React, { useContext, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { requestUser, receiveUser, userError } from \"./reducer/action\";\n\nimport Home from \"./components/home-page\";\nimport Poll from \"./components/poll-page\";\nimport LogIn from \"./components/log-in-page\";\nimport User from \"./components/user-page\";\n\nfunction App() {\n  const userState = useSelector((state) => state.user);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser && !userState.user) {\n      const foundUser = JSON.parse(loggedInUser);\n      dispatch(receiveUser(foundUser));\n    } else if (userState.user) {\n      <Redirect to={'/'} />\n    }\n  }, [userState]);\n\n  return (\n    <Router>\n      {userState.user ? (\n        <>\n          <Route exact path={\"/\"}>\n            <Home />\n          </Route>\n          <Route path={\"/poll/:pollId\"}>\n            <Poll />\n          </Route>\n          <Route path={\"/user/:userId\"}>\n            <User />\n          </Route>\n        </>\n      ) : (\n        <Route exact path={\"/\"}>\n          <LogIn />\n        </Route>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\GlobalStyles.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\home-page\\index.jsx",["66","67","68","69","70","71","72"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\poll-page\\index.jsx",["73","74","75","76","77","78","79"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { SERVER_URL, initialData } from '../../constant';\r\nimport {\r\n  requestUser,\r\n  receiveUser,\r\n  userError,\r\n  userLogout,\r\n  receivePolls,\r\n  requestPolls,\r\n  pollError,\r\n  votePoll,\r\n} from \"../../reducer/action\";\r\nimport { COLOR } from '../../constant'\r\n\r\nfunction Poll() {\r\n  const userState = useSelector(state => state.user)\r\n  const pollState = useSelector(state => state.poll)\r\n\r\n  const { pollId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const currentPoll = pollState.polls.find(poll => poll._id === pollId);\r\n\r\n  const handleLogout = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    dispatch(userLogout());\r\n\r\n    history.push('/')\r\n\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleVote = (ev, _id, title) => {\r\n    ev.preventDefault();\r\n\r\n    fetch(SERVER_URL + `/api/votepoll`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: userState.user,\r\n        title,\r\n        _id,\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(poll => {\r\n        fetchAllPolls()\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const fetchAllPolls = () => {\r\n    dispatch(requestPolls());\r\n\r\n    fetch(SERVER_URL + `/api/getpolls`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        dispatch(receivePolls(data.polls))\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n        dispatch(pollError(err.message))\r\n      })\r\n  }\r\n\r\n  const handleColorChange = (pollData) => {\r\n    const colorOrder = [];\r\n\r\n    pollData.options.forEach(option => colorOrder.push({value: option.value, title: option.title}))\r\n\r\n    colorOrder.sort((a,b) => a.value > b.value ? 1: -1)\r\n\r\n    pollData.options.map((option, index) => {\r\n      const indexValue = colorOrder.findIndex(x => x.title === option.title)\r\n\r\n      option.color = COLOR.RED_GRADIENT[indexValue]\r\n\r\n      if (option.voters.find(voter => voter === userState.user.username)) {\r\n        option.color = COLOR.GREEN\r\n      }\r\n    })\r\n  }\r\n\r\n  handleColorChange(currentPoll)\r\n  return <>\r\n    <div>\r\n      <Link to={`/`}>Back To Voting</Link>\r\n      <Link to={`/user/${userState.user.username}`}>{userState.user.username}</Link>\r\n      {userState && <button onClick={handleLogout}>Leave</button>}\r\n    </div>\r\n    <div>\r\n      <PieChart data={currentPoll.options} style={{ width: '200px'}} onClick={(ev, index) => handleVote(ev, currentPoll._id, currentPoll.options[index].title)} startAngle={270} lineWidth={35} />\r\n      <ul>\r\n        {currentPoll.options.map(option => {\r\n          return (<>\r\n              <li onClick={(ev) => handleVote(ev, currentPoll._id, option.title)} ><p style={{ background: `${option.color}`}}>{option.voters.length}</p> {option.title}</li>\r\n            </>)\r\n        })}\r\n      </ul>\r\n    </div>\r\n  </>;\r\n}\r\n\r\nexport default Poll;\r\n","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\log-in-page\\index.jsx",["80"],"import React, { useState } from \"react\";\r\nimport { SERVER_URL } from '../../constant';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  requestUser,\r\n  receiveUser,\r\n  userError,\r\n} from \"../../reducer/action\";\r\nimport { COLOR } from '../../constant';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nfunction LogIn() {\r\n  const userState = useSelector(state => state.user)\r\n\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleUserForm = (ev) => {\r\n    ev.preventDefault();\r\n    setNewUser(!newUser);\r\n    setPassword('');\r\n    setUsername('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const handleLogin = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    dispatch(requestUser())\r\n\r\n    fetch(SERVER_URL + `/api/getuser/${username}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status == 200) {\r\n          dispatch(receiveUser(data.user))\r\n          dispatch(userError(''))\r\n          localStorage.setItem('user', JSON.stringify(data.user))\r\n          history.push('/')\r\n        } else {\r\n          dispatch(userError(data.message))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n        dispatch(userError(err.message))\r\n      })\r\n  }\r\n\r\n  const checkPasswordComplexity = (pwd) => {\r\n    const hasUppercase = /[A-Z]/.test(pwd)\r\n    const hasLowercase = /[a-z]/.test(pwd)\r\n    const hasNumber = /[\\d]/.test(pwd)\r\n    const hasNonAlpha = /[\\W]/.test(pwd)\r\n\r\n    const validity = hasLowercase + hasNonAlpha + hasNumber + hasUppercase\r\n\r\n    return validity >= 4\r\n  }\r\n\r\n  const handleSignup = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    const user = {\r\n      username,\r\n      password,\r\n      votes: [],\r\n    }\r\n\r\n    const passwordComplexity = checkPasswordComplexity(password)\r\n    const passwordCheck = password === confirmPassword\r\n\r\n    if (passwordCheck && passwordComplexity) {\r\n      fetch(SERVER_URL + `/api/createuser`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user\r\n        })\r\n      })\r\n        .then(res => res.json())\r\n        .then(poll => {\r\n          if (poll.status === 201) {\r\n            setMessage('')\r\n            dispatch(receiveUser(poll.user))\r\n            localStorage.setItem('user', JSON.stringify(poll.user))\r\n            history.push('/')\r\n          } else {\r\n            setMessage(poll.message)\r\n          }\r\n        })\r\n        .catch(err => console.log(err.message))\r\n    } else if (passwordCheck && !passwordComplexity) {\r\n      setMessage('Please use a more complex password')\r\n    } else {\r\n      setMessage('Please confirm your password')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LogInContainer>\r\n      {newUser ? (\r\n        <FormContainer>\r\n          <form onSubmit={handleSignup}>\r\n            <InputContainer>\r\n              <StyledField label={'Username'} onChange={(ev) => setUsername(ev.currentTarget.value)} value={username} variant={'outlined'} required />\r\n              <StyledField label={'Password'} type={'password'} onChange={(ev) => setPassword(ev.currentTarget.value)} value={password} variant={'outlined'} required />\r\n              <StyledField label={'Confirm Password'} type={'password'} onChange={(ev) => setConfirmPassword(ev.currentTarget.value)} value={confirmPassword} variant={'outlined'} required />\r\n            </InputContainer>\r\n            <LogInButton type={\"submit\"}>Sign Up</LogInButton>\r\n          </form>\r\n          <ChangeFormButton type={\"button\"} onClick={handleUserForm}>\r\n            Already a member?\r\n          </ChangeFormButton>\r\n        </FormContainer>\r\n      ) : (\r\n        <FormContainer>\r\n          <form onSubmit={handleLogin}>\r\n            <InputContainer>\r\n              <StyledField onChange={(ev) => setUsername(ev.currentTarget.value)} type={\"text\"} variant={'outlined'} label={'Username'} required />\r\n              <StyledField onChange={(ev) => setPassword(ev.currentTarget.value)} type={\"password\"} variant={'outlined'} label={'Password'} required />\r\n            </InputContainer>\r\n            <LogInButton type={\"submit\"}>Log In</LogInButton>\r\n          </form>\r\n          <ChangeFormButton type={\"button\"} onClick={handleUserForm}>\r\n            First Time Here ?\r\n          </ChangeFormButton>\r\n        </FormContainer>\r\n      )}\r\n      {message && <p>{message}</p>}\r\n      {userState.message && <p>{userState.message}</p>}\r\n    </LogInContainer>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n\r\nconst LogInContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding-bottom: 100px;\r\n`\r\nconst FormContainer = styled.div`\r\n  width: 350px;\r\n  height: 400px;\r\n  background: ${COLOR.SAND};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-radius: 5px;\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nconst StyledField = withStyles({\r\n  root: {\r\n    marginBottom: '10px',\r\n    '& label.Mui-focused': {\r\n      color: `${COLOR.ROCK}`,\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: `${COLOR.ROCK}`,\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n    },\r\n  },\r\n})(TextField)\r\nconst LogInButton = styled.button`\r\n  height: 30px;\r\n  width: 100%;\r\n  color: ${COLOR.SAND};\r\n  background: ${COLOR.ROCK};\r\n  border: 1px solid ${COLOR.WOOD};\r\n  border-radius: 5px;\r\n  transition: all 0.1s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst ChangeFormButton = styled.button`\r\n  background-color: ${COLOR.SAND};\r\n  border: none;\r\n  color: ${COLOR.ROCK};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\user-page\\index.jsx",["81","82","83","84","85","86","87","88","89","90","91"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { SERVER_URL, initialData } from '../../constant';\r\nimport {\r\n  requestUser,\r\n  receiveUser,\r\n  userError,\r\n  userLogout,\r\n  receivePolls,\r\n  requestPolls,\r\n  pollError,\r\n  votePoll,\r\n} from \"../../reducer/action\";\r\nimport { COLOR } from '../../constant'\r\n\r\nfunction User() {\r\n  const userState = useSelector((state) => state.user);\r\n  const pollState = useSelector((state) => state.poll);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    dispatch(userLogout());\r\n\r\n    history.push('/')\r\n\r\n    localStorage.clear();\r\n  }\r\n  const fetchAllPolls = () => {\r\n    dispatch(requestPolls());\r\n\r\n    fetch(SERVER_URL + `/api/getpolls`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        dispatch(receivePolls(data.polls))\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n        dispatch(pollError(err.message))\r\n      })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (pollState.polls.length === 0) {\r\n      fetchAllPolls()\r\n    }\r\n  }, [])\r\n\r\nconsole.log(pollState.polls.length)\r\n  return (\r\n    <>\r\n      <div>\r\n        <Link to={`/`}>Back To Voting</Link>\r\n        {userState && <button onClick={handleLogout}>Leave</button>}\r\n      </div>\r\n      {userState.user.votes && pollState.polls. length > 0 ? (\r\n        <div>\r\n          {userState.user.votes.map((userPoll) => {\r\n            return (\r\n              <Link to={`/poll/${userPoll}`}>\r\n                {pollState.polls.find((poll) => poll._id === userPoll).pollName}\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <p>you didn't vote yet</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\constant.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\user-reducer.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\action.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\store.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\poll-reducer.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"100","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":21},{"ruleId":"96","severity":1,"message":"102","line":9,"column":36,"nodeType":"98","messageId":"99","endLine":9,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":29,"column":6,"nodeType":"105","endLine":29,"endColumn":17,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"101","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":9,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":10,"column":3,"nodeType":"98","messageId":"99","endLine":10,"endColumn":12},{"ruleId":"96","severity":1,"message":"108","line":15,"column":3,"nodeType":"98","messageId":"99","endLine":15,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":160,"column":42,"nodeType":"111","messageId":"112","endLine":160,"endColumn":44},{"ruleId":"96","severity":1,"message":"113","line":171,"column":9,"nodeType":"98","messageId":"99","endLine":171,"endColumn":25},{"ruleId":"103","severity":1,"message":"114","line":179,"column":6,"nodeType":"105","endLine":179,"endColumn":8,"suggestions":"115"},{"ruleId":"96","severity":1,"message":"116","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"117","line":5,"column":22,"nodeType":"98","messageId":"99","endLine":5,"endColumn":33},{"ruleId":"96","severity":1,"message":"101","line":7,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":9,"endColumn":12},{"ruleId":"96","severity":1,"message":"108","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":14,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":82,"column":42,"nodeType":"111","messageId":"112","endLine":82,"endColumn":44},{"ruleId":"118","severity":1,"message":"119","line":51,"column":25,"nodeType":"120","messageId":"121","endLine":51,"endColumn":27},{"ruleId":"96","severity":1,"message":"116","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"122","line":3,"column":22,"nodeType":"98","messageId":"99","endLine":3,"endColumn":31},{"ruleId":"96","severity":1,"message":"123","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"117","line":5,"column":22,"nodeType":"98","messageId":"99","endLine":5,"endColumn":33},{"ruleId":"96","severity":1,"message":"101","line":7,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":9,"endColumn":12},{"ruleId":"96","severity":1,"message":"108","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":14,"endColumn":11},{"ruleId":"96","severity":1,"message":"124","line":16,"column":10,"nodeType":"98","messageId":"99","endLine":16,"endColumn":15},{"ruleId":"103","severity":1,"message":"114","line":53,"column":6,"nodeType":"105","endLine":53,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":62,"column":32,"nodeType":"128","messageId":"129","endLine":62,"endColumn":55,"fix":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'requestUser' is defined but never used.","'userError' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'receiveUser' is defined but never used.","'votePoll' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleMouseHover' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'fetchAllPolls' and 'pollState.polls.length'. Either include them or remove the dependency array.",["134"],"'useState' is defined but never used.","'initialData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useParams' is defined but never used.","'PieChart' is defined but never used.","'COLOR' is defined but never used.",["135"],"no-whitespace-before-property","Unexpected whitespace before property length.","MemberExpression","unexpectedWhitespace",{"range":"136","text":"137"},"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},[1556,1558],".","Update the dependencies array to be: [dispatch, userState]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetchAllPolls, pollState.polls.length]",{"range":"145","text":"146"},{"range":"147","text":"146"},[846,857],"[dispatch, userState]",[4158,4160],"[fetchAllPolls, pollState.polls.length]",[1303,1305]]
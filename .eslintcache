[{"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\GlobalStyles.js":"3","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\home-page\\index.jsx":"4","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\poll-page\\index.jsx":"5","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\log-in-page\\index.jsx":"6","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\user-page\\index.jsx":"7","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\constant.js":"8","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\user-reducer.js":"9","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\action.js":"10","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\store.js":"11","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\index.js":"12","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\poll-reducer.js":"13"},{"size":431,"mtime":1612314588518,"results":"14","hashOfConfig":"15"},{"size":1304,"mtime":1612992176014,"results":"16","hashOfConfig":"15"},{"size":1727,"mtime":1613437854789,"results":"17","hashOfConfig":"15"},{"size":12384,"mtime":1614708906027,"results":"18","hashOfConfig":"15"},{"size":7004,"mtime":1614709881133,"results":"19","hashOfConfig":"15"},{"size":6615,"mtime":1613524217858,"results":"20","hashOfConfig":"15"},{"size":3679,"mtime":1614716880213,"results":"21","hashOfConfig":"15"},{"size":474,"mtime":1613611229286,"results":"22","hashOfConfig":"15"},{"size":726,"mtime":1612321768557,"results":"23","hashOfConfig":"15"},{"size":593,"mtime":1612316204270,"results":"24","hashOfConfig":"15"},{"size":303,"mtime":1612230258239,"results":"25","hashOfConfig":"15"},{"size":175,"mtime":1612230243143,"results":"26","hashOfConfig":"15"},{"size":791,"mtime":1612313875949,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ja0ftj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\index.js",[],["57","58"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\App.js",["59","60","61","62","63"],"import React, { useContext, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { requestUser, receiveUser, userError } from \"./reducer/action\";\n\nimport Home from \"./components/home-page\";\nimport Poll from \"./components/poll-page\";\nimport LogIn from \"./components/log-in-page\";\nimport User from \"./components/user-page\";\n\nfunction App() {\n  const userState = useSelector((state) => state.user);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser && !userState.user) {\n      const foundUser = JSON.parse(loggedInUser);\n      dispatch(receiveUser(foundUser));\n    } else if (userState.user) {\n      <Redirect to={'/'} />\n    }\n  }, [userState]);\n\n  return (\n    <Router>\n      {userState.user ? (\n        <>\n          <Route exact path={\"/\"}>\n            <Home />\n          </Route>\n          <Route path={\"/poll/:pollId\"}>\n            <Poll />\n          </Route>\n          <Route path={\"/user/:userId\"}>\n            <User />\n          </Route>\n        </>\n      ) : (\n        <Route exact path={\"/\"}>\n          <LogIn />\n        </Route>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\GlobalStyles.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\home-page\\index.jsx",["64","65"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\poll-page\\index.jsx",["66","67","68"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\log-in-page\\index.jsx",["69"],"import React, { useState } from \"react\";\r\nimport { SERVER_URL } from '../../constant';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  requestUser,\r\n  receiveUser,\r\n  userError,\r\n} from \"../../reducer/action\";\r\nimport { COLOR } from '../../constant';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nfunction LogIn() {\r\n  const userState = useSelector(state => state.user)\r\n\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleUserForm = (ev) => {\r\n    ev.preventDefault();\r\n    setNewUser(!newUser);\r\n    setPassword('');\r\n    setUsername('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const handleLogin = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    dispatch(requestUser())\r\n\r\n    fetch(SERVER_URL + `/api/getuser/${username}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status == 200) {\r\n          dispatch(receiveUser(data.user))\r\n          dispatch(userError(''))\r\n          localStorage.setItem('user', JSON.stringify(data.user))\r\n          history.push('/')\r\n        } else {\r\n          dispatch(userError(data.message))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n        dispatch(userError(err.message))\r\n      })\r\n  }\r\n\r\n  const checkPasswordComplexity = (pwd) => {\r\n    const hasUppercase = /[A-Z]/.test(pwd)\r\n    const hasLowercase = /[a-z]/.test(pwd)\r\n    const hasNumber = /[\\d]/.test(pwd)\r\n    const hasNonAlpha = /[\\W]/.test(pwd)\r\n\r\n    const validity = hasLowercase + hasNonAlpha + hasNumber + hasUppercase\r\n\r\n    return validity >= 4\r\n  }\r\n\r\n  const handleSignup = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    const user = {\r\n      username,\r\n      password,\r\n      votes: [],\r\n    }\r\n\r\n    const passwordComplexity = checkPasswordComplexity(password)\r\n    const passwordCheck = password === confirmPassword\r\n\r\n    if (passwordCheck && passwordComplexity) {\r\n      fetch(SERVER_URL + `/api/createuser`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user\r\n        })\r\n      })\r\n        .then(res => res.json())\r\n        .then(poll => {\r\n          if (poll.status === 201) {\r\n            setMessage('')\r\n            dispatch(receiveUser(poll.user))\r\n            localStorage.setItem('user', JSON.stringify(poll.user))\r\n            history.push('/')\r\n          } else {\r\n            setMessage(poll.message)\r\n          }\r\n        })\r\n        .catch(err => console.log(err.message))\r\n    } else if (passwordCheck && !passwordComplexity) {\r\n      setMessage('Please use a more complex password')\r\n    } else {\r\n      setMessage('Please confirm your password')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LogInContainer>\r\n      {newUser ? (\r\n        <FormContainer>\r\n          <form onSubmit={handleSignup}>\r\n            <InputContainer>\r\n              <StyledField label={'Username'} onChange={(ev) => setUsername(ev.currentTarget.value)} value={username} variant={'outlined'} required />\r\n              <StyledField label={'Password'} type={'password'} onChange={(ev) => setPassword(ev.currentTarget.value)} value={password} variant={'outlined'} required />\r\n              <StyledField label={'Confirm Password'} type={'password'} onChange={(ev) => setConfirmPassword(ev.currentTarget.value)} value={confirmPassword} variant={'outlined'} required />\r\n            </InputContainer>\r\n            <LogInButton type={\"submit\"}>Sign Up</LogInButton>\r\n          </form>\r\n          <ChangeFormButton type={\"button\"} onClick={handleUserForm}>\r\n            Already a member?\r\n          </ChangeFormButton>\r\n        </FormContainer>\r\n      ) : (\r\n        <FormContainer>\r\n          <form onSubmit={handleLogin}>\r\n            <InputContainer>\r\n              <StyledField onChange={(ev) => setUsername(ev.currentTarget.value)} type={\"text\"} variant={'outlined'} label={'Username'} required />\r\n              <StyledField onChange={(ev) => setPassword(ev.currentTarget.value)} type={\"password\"} variant={'outlined'} label={'Password'} required />\r\n            </InputContainer>\r\n            <LogInButton type={\"submit\"}>Log In</LogInButton>\r\n          </form>\r\n          <ChangeFormButton type={\"button\"} onClick={handleUserForm}>\r\n            First Time Here ?\r\n          </ChangeFormButton>\r\n        </FormContainer>\r\n      )}\r\n      {message && <p>{message}</p>}\r\n      {userState.message && <p>{userState.message}</p>}\r\n    </LogInContainer>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n\r\nconst LogInContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding-bottom: 100px;\r\n`\r\nconst FormContainer = styled.div`\r\n  width: 350px;\r\n  height: 400px;\r\n  background: ${COLOR.SAND};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-radius: 5px;\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nconst StyledField = withStyles({\r\n  root: {\r\n    marginBottom: '10px',\r\n    '& label.Mui-focused': {\r\n      color: `${COLOR.ROCK}`,\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: `${COLOR.ROCK}`,\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: `${COLOR.ROCK}`,\r\n      },\r\n    },\r\n  },\r\n})(TextField)\r\nconst LogInButton = styled.button`\r\n  height: 30px;\r\n  width: 100%;\r\n  color: ${COLOR.SAND};\r\n  background: ${COLOR.ROCK};\r\n  border: 1px solid ${COLOR.WOOD};\r\n  border-radius: 5px;\r\n  transition: all 0.1s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    font-weight: bold;\r\n  }\r\n`\r\nconst ChangeFormButton = styled.button`\r\n  background-color: ${COLOR.SAND};\r\n  border: none;\r\n  color: ${COLOR.ROCK};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`","C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\components\\user-page\\index.jsx",["70"],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\constant.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\user-reducer.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\action.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\store.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\index.js",[],"C:\\Users\\alexa\\Documents\\GitHub\\lungor\\src\\reducer\\poll-reducer.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},{"ruleId":"75","severity":1,"message":"79","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":21},{"ruleId":"75","severity":1,"message":"81","line":9,"column":36,"nodeType":"77","messageId":"78","endLine":9,"endColumn":45},{"ruleId":"82","severity":1,"message":"83","line":29,"column":6,"nodeType":"84","endLine":29,"endColumn":17,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":157,"column":42,"nodeType":"88","messageId":"89","endLine":157,"endColumn":44},{"ruleId":"82","severity":1,"message":"90","line":176,"column":6,"nodeType":"84","endLine":176,"endColumn":8,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":81,"column":42,"nodeType":"88","messageId":"89","endLine":81,"endColumn":44},{"ruleId":"82","severity":1,"message":"90","line":102,"column":6,"nodeType":"84","endLine":102,"endColumn":8,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":114,"column":45,"nodeType":"88","messageId":"94","endLine":114,"endColumn":47},{"ruleId":"95","severity":1,"message":"96","line":51,"column":25,"nodeType":"97","messageId":"98","endLine":51,"endColumn":27},{"ruleId":"82","severity":1,"message":"90","line":60,"column":6,"nodeType":"84","endLine":60,"endColumn":8,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'requestUser' is defined but never used.","'userError' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has missing dependencies: 'fetchAllPolls' and 'pollState.polls.length'. Either include them or remove the dependency array.",["103"],["104"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"108","fix":"111"},"Update the dependencies array to be: [dispatch, userState]",{"range":"112","text":"113"},"Update the dependencies array to be: [fetchAllPolls, pollState.polls.length]",{"range":"114","text":"115"},{"range":"116","text":"115"},{"range":"117","text":"115"},[846,857],"[dispatch, userState]",[4139,4141],"[fetchAllPolls, pollState.polls.length]",[2594,2596],[1404,1406]]